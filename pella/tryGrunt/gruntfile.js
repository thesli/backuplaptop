// Generated by CoffeeScript 1.6.3
(function() {
  module.exports = function(grunt) {
    var t, taskToLoad, _i, _len;
    grunt.initConfig({
      pkg: grunt.file.readJSON("package.json"),
      coffee: {
        compileJoined: {
          options: {
            join: true
          },
          files: {
            "output/vendor.js": ["vendor/js/**/*.coffee"],
            "src/js/joined.js": ["src/js/**/*.coffee"]
          }
        }
      },
      jade: {
        compile: {
          options: {
            data: {
              debug: true
            }
          },
          files: {
            "output/dest.html": ["/src/jade/**/*.jade"]
          }
        }
      },
      watch: {
        scripts: {
          files: ["src/js/**/*.coffee", "vendor/js/**/*.coffee"],
          tasks: ["coffee", "concat"]
        },
        css: {
          files: ["src/css/*.css"],
          tasks: ["concat"]
        },
        html: {
          files: ["src/html/*.jade"],
          tasks: ["jade"]
        },
        options: {
          livereload: true
        }
      },
      concat: {
        js: {
          src: ["vendor/js/**/*.js", "src/js/**/*.js"],
          dest: "output/use.js"
        },
        css: {
          src: ["vendor/css/**/*.css", "src/css/**/*.css"],
          dest: "output/use.css"
        }
      }
    });
    taskToLoad = ["grunt-contrib-concat", "grunt-contrib-coffee", "grunt-contrib-watch", "grunt-contrib-compass", "grunt-contrib-jade", "grunt-contrib-"];
    for (_i = 0, _len = taskToLoad.length; _i < _len; _i++) {
      t = taskToLoad[_i];
      grunt.loadNpmTasks(t);
    }
    return grunt.registerTask("default", ["coffee", "concat", "jade", "watch"]);
  };

}).call(this);
