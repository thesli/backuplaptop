// Generated by CoffeeScript 1.6.3
(function() {
  var app, debugDelay, express, http, io, path, server;

  express = require('express');

  http = require('http');

  path = require('path');

  app = express();

  server = http.createServer(app);

  io = require('socket.io').listen(server);

  io.configure('production', function() {
    return io.set('log level', 1);
  });

  io.configure('development', function() {
    return io.set('log level', 3);
  });

  app.configure(function() {
    app.set('port', process.env.PORT || 80);
    app.set('views', path.join(__dirname, 'views'));
    app.set('view engine', 'jade');
    app.engine('jade', require('jade').__express);
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    app.use(express["static"](path.join(__dirname, 'public')));
    return app.use(app.router);
  });

  app.configure('development', function() {
    return app.use(express.errorHandler());
  });

  debugDelay = 0;

  app.get('/partials/:partial.html', function(req, res) {
    return setTimeout(function() {
      return res.render("partials/" + req.params.partial);
    }, debugDelay);
  });

  app.get('*', function(req, res) {
    return setTimeout(function() {
      return res.render('index');
    }, debugDelay);
  });

  io.sockets.on('connection', function(socket) {
    var i;
    socket.emit('serverEvent', 'client connect event');
    i = 0;
    return setTimeout(function() {
      socket.emit('serverEvent', 'test event ' + ++i);
      return setTimeout(arguments.callee, 1000);
    }, 0);
  });

  server.listen(app.get('port'), function() {
    return console.log('on port ' + app.get('port'));
  });

}).call(this);
